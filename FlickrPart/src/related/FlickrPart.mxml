<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:related="related.*"
			   height="100%" width="100%" backgroundColor="#000000" creationComplete="myinitialize()" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.effects.Move;
			import mx.effects.Parallel;
			import mx.effects.Zoom;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			
			private var isCentered:Boolean = true;
			private var moveToCorner:Parallel;
			private var btnmoveToCorner:Parallel;
			//private var tag_temp:String;
			private var wait_time:Timer = new Timer(5000);
			public function search(event:Event):void {
				if (isCentered) {
					if (moveToCorner == null) {
						moveToCorner = new Parallel();
						
						var move:Move = new Move();
						move.xFrom = textInput.x;
						move.xTo = 20;
						move.yFrom = textInput.y;
						move.yTo = 20;
						moveToCorner.addChild(move);
						
					}
					if (btnmoveToCorner == null) {
						btnmoveToCorner = new Parallel();
						
						var move1:Move = new Move();
						move1.xFrom = btn.x;
						move1.xTo = 20 + textInput.width +10;
						move1.yFrom = btn.y;
						move1.yTo = 20;
						btnmoveToCorner.addChild(move1);
						
					}
					if (btnmoveToCorner == null) {
						btnmoveToCorner = new Parallel();
						
						var move1:Move = new Move();
						move1.xFrom = btn.x;
						move1.xTo = 20 + textInput.width +10;
						move1.yFrom = btn.y;
						move1.yTo = 20;
						btnmoveToCorner.addChild(move1);
						
					}
					
					isCentered = false;
					moveToCorner.play([textInput]);
					btnmoveToCorner.play([btn]);
					(related as Related).tag  = this.textInput.text;
				}
					//(related as Related).searchBar = this.textInput;
					//(related as Related).tag  = this.textInput.text;
				else{
					(related as Related).tag  = this.textInput.text;
					var i:int = 0;
					for(i = 0; i < 8;i++){
						(this.related as Related).set_visible(i,false);
					}
					(this.related as Related).middle.visible = false;
					for(i=0;i<9;i++)(this.related as Related).middle.set_visiable(i,false);
					var zoomScale:Parallel = new Parallel();
					zoomScale.duration = 1000;
					var zoomx:Zoom = new Zoom();
					
					zoomx.zoomHeightFrom = 0.167;
					zoomx.zoomHeightTo = 0.5;
					zoomx.zoomWidthFrom = 0.167;
					zoomx.zoomWidthTo = 0.5;
					zoomx.originX = this.x + this.width / 2;
					zoomx.originY = this.y + this.height / 2;
					
					zoomScale.addChild(zoomx);
					zoomScale.play([(this.related as Related).middle]);
					(this.related as Related).middle.visible = true;
					
					zoomScale.addEventListener(EffectEvent.EFFECT_END,scaleFinished);
					
					
					
					
				}
			}
			
			private function scaleFinished(event:EffectEvent):void{
				wait_time.addEventListener(TimerEvent.TIMER,playWait);
				wait_time.start();
			}
			
			private function playWait(event:TimerEvent):void{
				var i:int = 0;
				for(i=0;i<9;i++)(this.related as Related).middle.set_visiable(i,true);
				//for(i = 0; i < 8;i++){
				//(this.related as Related).set_visible(i,true);
				//}
				
				wait_time.stop();
				
			}
			
			private function myinitialize():void {
				//this.textInput.verticalCenter = 0;
				//this.textInput.horizontalCenter = 0;
				this.textInput.x = this.width / 2 - this.textInput.width / 2;
				this.textInput.y = this.height / 2 - this.textInput.height / 2;
				this.btn.x= this.textInput.x + this.textInput.width +10;
				this.btn.y= this.textInput.y
				this.btn.width = this.textInput.width /3;
				this.btn.height = this.textInput.height;
			}
		]]>
	</fx:Script>
	
	<related:Related id="related" verticalCenter="0" horizontalCenter="0" searchBar="{textInput}" btn="{btn}" />
	<s:TextInput id="textInput" enter="search(event)"  fontFamily="Arial Black" fontSize="22" />
	<mx:Button id="btn" click="search(event)" label="Search" />
	
</s:Application>
